{"version":3,"file":"index.cjs","names":["Plyr","instantiate: Instantiate<\n  PlyrInstance,\n  HTMLVideoElement,\n  PlyrConfigurationProps\n>","plyr","destroy: Destroy<PlyrInstance, PlyrConfigurationProps>","plyr: PlyrInstance | null","getAPI: GetAPI<PlyrInstance, PlyrConfigurationProps>","ref: Ref<APITypes>","params: PlyrConfigurationProps","deps: DependencyList | null"],"sources":["../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  DependencyList,\n  DetailedHTMLProps,\n  MutableRefObject,\n  Ref,\n  VideoHTMLAttributes,\n} from \"react\";\n// This is the critical change for the import\nimport * as Plyr from \"plyr\";\nimport useAptor, { Destroy, GetAPI, Instantiate } from \"react-aptor\";\n\n// And this is the critical change for usage\nconst PlyrJS = Plyr.default;\n\nexport type PlyrInstance = Plyr.default;\nexport type PlyrOptions = Plyr.Options;\nexport type PlyrSource = Plyr.SourceInfo;\n\ntype PlyrConfigurationProps = {\n  source: PlyrSource | null;\n  options?: PlyrOptions | null;\n};\n\ntype ReactVideoProps = DetailedHTMLProps<\n  VideoHTMLAttributes<HTMLVideoElement>,\n  HTMLVideoElement\n>;\nexport type PlyrProps = Omit<ReactVideoProps, \"ref\"> & PlyrConfigurationProps;\n\nexport interface APITypes {\n  plyr: PlyrInstance;\n}\n\nconst instantiate: Instantiate<\n  PlyrInstance,\n  HTMLVideoElement,\n  PlyrConfigurationProps\n> = (_, params) => {\n  const plyr = new PlyrJS(\".plyr-react\", params?.options ?? {});\n  if (params?.source) plyr.source = params?.source;\n  return plyr;\n};\n\nconst destroy: Destroy<PlyrInstance, PlyrConfigurationProps> = (\n  plyr: PlyrInstance | null\n) => {\n  if (plyr) plyr.destroy();\n};\n\nconst noop = () => {};\n\nconst getAPI: GetAPI<PlyrInstance, PlyrConfigurationProps> = (\n  plyr: PlyrInstance | null\n) => {\n  if (!plyr) {\n    return () =>\n      new Proxy({ plyr: { source: null } } as unknown as APITypes, {\n        get: (target, prop) => {\n          if (prop === \"plyr\") {\n            return target[prop];\n          }\n          return noop;\n        },\n      });\n  }\n\n  return () => ({\n    plyr,\n  });\n};\n\nexport function usePlyr(\n  ref: Ref<APITypes>,\n  params: PlyrConfigurationProps,\n  deps: DependencyList | null = null\n) {\n  return useAptor<PlyrInstance, HTMLVideoElement, PlyrConfigurationProps>(\n    ref,\n    {\n      instantiate,\n      getAPI,\n      destroy,\n      params,\n    },\n    deps ?? [params.options, params.source]\n  );\n}\n\nconst PlyrComponent = React.forwardRef<APITypes, PlyrProps>((props, ref) => {\n  const { source, options = null, ...rest } = props;\n  const raptorRef = usePlyr(ref, {\n    source,\n    options,\n  }) as MutableRefObject<HTMLVideoElement>;\n  return <video ref={raptorRef} className=\"plyr-react plyr\" {...rest} />;\n});\n\nexport { PlyrComponent as Plyr };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,MAAM,SAASA,KAAK;AAqBpB,MAAMC,cAIF,CAAC,GAAG,WAAW;CACjB,MAAMC,SAAO,IAAI,OAAO,eAAe,QAAQ,WAAW,CAAE;AAC5D,KAAI,QAAQ,OAAQ,QAAK,SAAS,QAAQ;AAC1C,QAAOA;AACR;AAED,MAAMC,UAAyD,CAC7DC,WACG;AACH,KAAIF,OAAM,QAAK,SAAS;AACzB;AAED,MAAM,OAAO,MAAM,CAAE;AAErB,MAAMG,SAAuD,CAC3DD,WACG;AACH,MAAKF,OACH,QAAO,MACL,IAAI,MAAM,EAAE,MAAM,EAAE,QAAQ,KAAM,EAAE,GAAyB,EAC3D,KAAK,CAAC,QAAQ,SAAS;AACrB,MAAI,SAAS,OACX,QAAO,OAAO;AAEhB,SAAO;CACR,EACF;AAGL,QAAO,OAAO,EACZ,aACD;AACF;AAED,SAAgB,QACdI,KACAC,QACAC,OAA8B,MAC9B;AACA,QAAO,yBACL,KACA;EACE;EACA;EACA;EACA;CACD,GACD,QAAQ,CAAC,OAAO,SAAS,OAAO,MAAO,EACxC;AACF;AAED,MAAM,gBAAgB,MAAM,WAAgC,CAAC,OAAO,QAAQ;CAC1E,MAAM,EAAE,QAAQ,UAAU,KAAM,GAAG,MAAM,GAAG;CAC5C,MAAM,YAAY,QAAQ,KAAK;EAC7B;EACA;CACD,EAAC;AACF,wBAAO,2BAAC;EAAM,KAAK;EAAW,WAAU;EAAkB,GAAI;GAAQ;AACvE,EAAC"}